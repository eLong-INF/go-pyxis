// Code generated by protoc-gen-go.
// source: session.proto
// DO NOT EDIT!

/*
Package pyxis_store is a generated protocol buffer package.

It is generated from these files:
	session.proto

It has these top-level messages:
	Session
*/
package store

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Session struct {
	Sid              *uint64               `protobuf:"varint,1,req,name=sid" json:"sid,omitempty"`
	Watch            []*Session_WatchEvent `protobuf:"bytes,2,rep,name=watch" json:"watch,omitempty"`
	Node             []string              `protobuf:"bytes,3,rep,name=node" json:"node,omitempty"`
	Timeout          *uint32               `protobuf:"varint,4,req,name=timeout" json:"timeout,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}

func (m *Session) GetSid() uint64 {
	if m != nil && m.Sid != nil {
		return *m.Sid
	}
	return 0
}

func (m *Session) GetWatch() []*Session_WatchEvent {
	if m != nil {
		return m.Watch
	}
	return nil
}

func (m *Session) GetNode() []string {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *Session) GetTimeout() uint32 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

type Session_WatchEvent struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	Type             *uint32 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Recursive        *bool   `protobuf:"varint,3,opt,name=recursive" json:"recursive,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Session_WatchEvent) Reset()         { *m = Session_WatchEvent{} }
func (m *Session_WatchEvent) String() string { return proto.CompactTextString(m) }
func (*Session_WatchEvent) ProtoMessage()    {}

func (m *Session_WatchEvent) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *Session_WatchEvent) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Session_WatchEvent) GetRecursive() bool {
	if m != nil && m.Recursive != nil {
		return *m.Recursive
	}
	return false
}

func init() {
}
